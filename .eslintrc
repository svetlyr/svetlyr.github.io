{
  "extends": [
    "eslint:recommended",
    "plugin:astro/recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:@typescript-eslint/strict",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "prettier" // * Override conflicting rules
  ],
  "plugins": ["prettier", "import", "@typescript-eslint"],
  "parserOptions": {
    "project": "tsconfig.json"
  },
  "parser": "@typescript-eslint/parser",
  "settings": {
    "import/parsers": { "@typescript-eslint/parser": [".ts", ".tsx", ".astro"] },
    "import/resolver": { "typescript": { "alwaysTryTypes": true }, "node": true }
  },
  "rules": {
    "no-unused-vars": "off",
    "no-duplicate-imports": "off",
    "@typescript-eslint/interface-name-prefix": "off",

    "import/no-unresolved": "error",
    "@typescript-eslint/no-explicit-any": "error",
    "@typescript-eslint/explicit-function-return-type": "error",
    "@typescript-eslint/explicit-module-boundary-types": "error",
    "@typescript-eslint/no-extraneous-class": ["error", { "allowEmpty": true }],

    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        "varsIgnorePattern": "^_",
        "argsIgnorePattern": "^_",
        "destructuredArrayIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/consistent-type-imports": "warn",
    "@typescript-eslint/consistent-type-definitions": ["warn", "type"],
    "padding-line-between-statements": [
      "warn",
      { "blankLine": "always", "prev": "*", "next": "return" },
      { "blankLine": "always", "prev": ["case", "default"], "next": "*" },
      { "blankLine": "always", "prev": ["const", "let", "var"], "next": "*" },
      { "blankLine": "always", "prev": "*", "next": ["if", "while", "do", "export"] },
      { "blankLine": "any", "prev": ["const", "let", "var"], "next": ["const", "let", "var"] }
    ]
  },
  "overrides": [
    {
      // * React & Astro config
      "files": ["*.tsx", "*.astro"],
      "parserOptions": {
        "sourceType": "module",
        "ecmaVersion": "latest",
        "ecmaFeatures": { "jsx": true },
        "extraFileExtensions": [".tsx"]
      },
      "plugins": ["react", "react-hooks", "@typescript-eslint"],
      "extends": ["plugin:react/recommended", "plugin:react/jsx-runtime", "plugin:react-hooks/recommended"],
      "rules": {
        "react/no-danger": "error",
        "react-hooks/rules-of-hooks": "error",

        "react/hook-use-state": "warn",
        "react/jsx-handler-names": "warn",
        "react/jsx-boolean-value": "warn",
        "react/jsx-no-leaked-render": "warn",
        "react-hooks/exhaustive-deps": "warn",
        "react/jsx-fragments": ["warn", "syntax"],
        "react/jsx-no-constructed-context-values": "warn",
        "react/destructuring-assignment": ["warn", "always"],
        "react/jsx-pascal-case": ["warn", { "allowAllCaps": true }],
        "react/display-name": ["warn", { "ignoreTranspilerName": true }],
        "react/jsx-no-useless-fragment": ["warn", { "allowExpressions": true }],
        "react/jsx-curly-brace-presence": [
          "warn",
          { "props": "always", "children": "ignore", "propElementValues": "always" }
        ]
      }
    },
    {
      /*
       * Astro config
       * Use after react config to override specific settings
       */
      "files": ["*.astro"],
      "parser": "astro-eslint-parser",
      "parserOptions": {
        "extraFileExtensions": [".astro"],
        "parser": "@typescript-eslint/parser"
      },
      "plugins": ["react", "@typescript-eslint"],
      "extends": ["plugin:react/jsx-runtime"],
      "rules": {
        // * Needed for Astro imports
        "import/default": "off",
        "import/namespace": "off",
        "import/no-named-as-default": "off",
        "import/no-named-as-default-member": "off",

        // * Needed for "class" property in html tags
        "react/no-unknown-property": "off",

        "astro/no-set-text-directive": "warn",
        "astro/no-unused-css-selector": "warn",
        "astro/no-unused-define-vars-in-style": "warn",

        "astro/no-set-html-directive": "error",
        "astro/no-conflict-set-directives": "error",
        "astro/no-deprecated-astro-resolve": "error",
        "astro/no-deprecated-astro-fetchcontent": "error",
        "astro/no-deprecated-astro-canonicalurl": "error"
      }
    }
  ]
}
